package com.ftrue.day08.sta.demo02;

/**
 * @ClassName StaticDemo02
 * @Description 此类用于演示功能
 * @Author Shark
 * @DateTime 2021年07月06日 11时14分
 * @Version 1.0
 *
 * 局部变量:
 *      声明在方法内部或者方法声明上的变量
 * 实例变量:
 *      声明在类中方法外,且没有static关键字修饰的变量
 * 静态变量
 *      声明在类中方法外,且含有static关键字修饰的变量
 *
 *
 * 三种变量的区别:
 *      代码中的位置不同:
 *          局部变量:方法内部或者方法声明上
 *          实例变量:类中方法外
 *          静态变量:类中方法外
 *      内存中的位置不同:
 *          局部变量:栈内存
 *          实例变量:堆内存
 *          静态变量:堆内存==>方法区==>静态区
 *      默认值不同:
 *          局部变量:没有默认值
 *          实例变量:有默认值
 *          静态变量:有默认值
 *      代码中的作用域不同:
 *          局部变量:方法中
 *          实例变量:类中(静态方法中和静态代码块中无法使用)
 *          静态变量:类中
 *      内存中的生命周期不同:
 *          局部变量:随着方法的调用而加载,随着方法的出栈而消失
 *          实例变量:随着对象的创建而加载,随着对象的消失而消失
 *          静态变量:随着的类的加载而加载,随着类的消失而消失
 *      最多加载次数不同:
 *          局部变量:在程序运行的过程中,可以加载多次(每调用一次方法就会加载一次局部变量)
 *          实例变量:在程序运行的过程中,可以加载多次(每创建一次对象就会加载一次实例变量)
 *          静态变量:在程序运行的过程中,可以加载唯一的一次(原因:字节码文件只加载唯一的一次)
 */
public class StaticDemo02 {
}
