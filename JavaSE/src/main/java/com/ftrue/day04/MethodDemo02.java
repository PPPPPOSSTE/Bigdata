package com.ftrue.day04;

/*
	方法声明的格式:
		修饰符 返回值类型 方法名 (形参类型1 形参名1,形参类型2 形参名2,......,形参类型n 形参名n) {
			方法体语句
			return 返回值;
		}

		修饰符:暂时用public static进行替代
		返回值类型:
			如果调用者方法需要用到自定义方法中的结果数据时,需要通过返回值的方式进行返回
		方法名:给方法起的名字,做到"见名知意"
		():形参列表
			自定义方法需要用到调用者方法里面的数据时,不能直接进行使用,需要通过形参传递的方式才能进行使用
		方法体语句:封装特殊功能的代码块
		return:(1)结束方法(2)如果return后面存在返回值,在结束方法之前将返回值进行返回
		返回值:自定义方法的结果数据


	方法声明前的两个明确
		返回值类型:
			基本数据类型
			引用数据类型
			无返回值类型
		形参列表:
			需要用到调用者方法中几个数据
			每个数据具体是什么数据类型
				基本数据类型
				引用数据类型

	需求:定义方法实现两个整数的求和计算

	方法的特点:
		不调用,不执行

	方法的调用:
		(1)方法如果属于类
			类名.方法名(实参);
		(2)方法如果属于对象
			对象名.方法名(实参);
		(3)调用同一个类中的方法
			a.单独调用(直接调用)
				方法名(实参);
			b.输出调用(打印调用)
				System.out.println(方法名(实参));
			c.赋值调用
				数据类型 变量名 = 方法名(实参);

	形式参数(形参):在声明方法时,()中的参数,格式:数据类型 变量名
	实际参数(实参):在调用方法时,()中的参数,格式:具体的数据

*/

public class MethodDemo02 {
	public static void main (String[] args) {
		//单独调用(直接调用)
		//getSum(3,4);
		//输出调用(打印调用)
		//System.out.println(getSum(3,4));
		//赋值调用
		int sum = getSum(3,4);
		System.out.println("sum = " + sum);
	}

	/*
		两个明确:
			返回值类型:int
			形参列表:int a , int b
	*/

	public static int getSum (int a, int b) {
		int sum = a + b;
		return sum;
	}
}